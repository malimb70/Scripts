#! /bin/sh
#
# varnishncsa Control the Varnish Cache Plus NCSA logging daemon
#
# chkconfig: - 90 10
# description: Varnish Cache Plus NCSA logging daemon
# processname: varnishncsa
# config:
# pidfile: /var/run/varnishncsa.pid

### BEGIN INIT INFO
# Provides: varnishncsa
# Required-Start: $network $local_fs $remote_fs
# Required-Stop: $network $local_fs $remote_fs
# Default-Start:
# Default-Stop:
# Short-Description: start and stop varnishncsa
# Description: Varnish Cache Plus NCSA logging daemon
### END INIT INFO

# Source function library.
. /etc/init.d/functions

retval=0
pidfile="/var/run/varnishncsa_<%= @servicename %>.pid"
lockfile="/var/lock/subsys/varnishncsa_<%= @servicename %>"
logfile="/var/log/varnish/varnishncsa_<%= @servicename %>.log"
LOGFORMAT="%{X-Forwarded-For}i %l %u %t \"%r\" %s %b \"%{Referer}i\" \"%{User-agent}i\""
exec="/usr/bin/varnishncsa"
prog="varnishncsa"

DAEMON_OPTS="-q \"ReqHeader ~ '^[Hh]ost: <%= @hostfilter %>$'\" -a -w $logfile -D -P $pidfile -F '${LOGFORMAT}'"

# Include varnishncsa defaults
[ -e /etc/sysconfig/varnishncsa ] && . /etc/sysconfig/varnishncsa

start() {

        if [ ! -x $exec ]
        then
                echo $exec not found
                exit 5
        fi

        echo -n "Starting Varnish Cache Plus NCSA logging daemon: "

        daemon --pidfile $pidfile $exec "$DAEMON_OPTS"
        echo
        return $retval
}

stop() {
        echo -n "Stopping Varnish Cache Plus NCSA logging daemon: "
        killproc -p $pidfile $prog
        retval=$?
        echo
        [ $retval -eq 0 ] && rm -f $lockfile
        return $retval
}

restart() {
        stop
        start
}

reload() {
        restart
}

force_reload() {
        restart
}

rh_status() {
        status -p $pidfile $prog
}

rh_status_q() {
        rh_status >/dev/null 2>&1
}

# See how we were called.
case "$1" in
        start)
                rh_status_q && exit 0
                $1
                ;;
        stop)
                rh_status_q || exit 0
                $1
                ;;
        restart)
                $1
                ;;
        reload)
                rh_status_q || exit 7
                $1
                ;;
        force-reload)
                force_reload
                ;;
        status)
                rh_status
                ;;
        condrestart|try-restart)
                rh_status_q || exit 0
                restart
                ;;
        *)
        echo "Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"

        exit 2
esac

exit $?
